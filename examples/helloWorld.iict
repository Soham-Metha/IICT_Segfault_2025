x:str = "Hi\n";                         
% global variables, type system, 
% supported types: string, int64, bools 
% & pointers(WIP, can be parsed but not compiled)

sayHi:func(n:i64, y:i64) = {            % functions with parameter passing
     print_i64(y);                      % numeric output
     write("_hello,world!\n");          % string output
     y < n -> sayHi(n, y+1);            % binary operations, conditional statements
     % recursion!
}

sayBye:func(n:i64 = 10;) = {            % default values! (WIP,same as ptrs)
     y:i64 = 0;                         % local variables
     y < n <-> {                        % loops
          print_i64(y);
          write("_bye,world!\n");
          y = y+1; 
     }
}

main:func() = {

     write(x);                          % access global variables
     sayHi(2,0);                        % call recursive function

     (1) then {
     % keywords "then" and "repeat" can be
     % used instead of '->' (conditional)
     % and '<->' (loops)
          sayBye(2);
     }

     x = "End_of_main\n";               % update global variable
     {                                  % encapsulation with local scopes!
          x:str = "Inside_local_scope\n";
          % variable shadowing
          write(x);
     }

    write(x);                           % back to the global variable

    1+2+3;                              % return value
}
